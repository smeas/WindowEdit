<Window x:Class="WindowEdit.RealWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Window_Edit"
        mc:Ignorable="d"
        xmlns:ie="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:windowEdit="clr-namespace:WindowEdit"
        Title="Window Edit" Width="725" Height="500"
        Name="Window">
	<Window.DataContext>
		<windowEdit:Model />
	</Window.DataContext>
	<Window.Resources>
		<Style x:Key="DisableWhenSelectionNull">
			<Style.Triggers>
				<DataTrigger Binding="{Binding TargetWindow}" Value="{x:Null}">
					<Setter Property="Control.IsEnabled" Value="False" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="2*" />
			<ColumnDefinition />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>

		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2*" />
				<ColumnDefinition Width="0.8*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>

			<Label Content="Target Window" Margin="10,0" />
			<Button Content="Refresh" Margin="5" Grid.Row="0" Grid.Column="1"
			        Command="{Binding RefreshWindowsCommand}" />
			<ListBox Name="_WindowListBox" Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0"
			         DisplayMemberPath="Title"
			         ItemsSource="{Binding WindowList}">
				<ie:Interaction.Triggers>
					<ie:EventTrigger EventName="SelectionChanged">
						<ie:InvokeCommandAction Command="{Binding SelectWindowCommand}"
						                        CommandParameter="{Binding ElementName=_WindowListBox, Path=SelectedItem}" />
					</ie:EventTrigger>
				</ie:Interaction.Triggers>
			</ListBox>
		</Grid>

		<StackPanel Style="{StaticResource DisableWhenSelectionNull}" Margin="10,0" Grid.Column="1">
			<Label Content="Properties" VerticalAlignment="Top" Margin="10,0" />
			<StackPanel Orientation="Vertical">
				<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
			</StackPanel>

			<Button Content="Refresh" Margin="10,10,10,0" VerticalAlignment="Top"
			        Command="{Binding RefreshWindowDataCommand}" />

			<Grid VerticalAlignment="Top" Margin="0,5">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<Label Grid.Column="0" Content="X:" VerticalAlignment="Top" RenderTransformOrigin="0.5,-0.808" Height="20"
				       Padding="2" Margin="10,0" />
				<xctk:IntegerUpDown VerticalAlignment="Top" Grid.Column="1" Margin="0,0,10,0"
				                    Text="{Binding WinPosX, Mode=TwoWay}" />
				<Label Grid.Column="0" Content="Y:" Margin="10,25,10,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,-0.808"
				       Padding="2" Height="20" />
				<xctk:IntegerUpDown VerticalAlignment="Top" Grid.Column="1" Margin="0,25,10,0"
				                    Text="{Binding WinPosY, Mode=TwoWay}" />
				<Button Content="Set" Margin="10,50,10,0" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.Column="0"
				        Command="{Binding SetPosCommand}" />
			</Grid>

			<Grid VerticalAlignment="Top" Margin="0,5">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<Label Grid.Column="0" Content="Width:" VerticalAlignment="Top" RenderTransformOrigin="0.5,-0.808" Height="20"
				       Padding="2" Margin="10,0" />
				<xctk:IntegerUpDown VerticalAlignment="Top" Grid.Column="1" Margin="0,0,10,0"
				                    Text="{Binding WinWidth, Mode=TwoWay}" />
				<Label Grid.Column="0" Content="Height:" Margin="10,25,10,0" VerticalAlignment="Top"
				       RenderTransformOrigin="0.5,-0.808" Padding="2" Height="20" />
				<xctk:IntegerUpDown VerticalAlignment="Top" Grid.Column="1" Margin="0,25,10,0"
				                    Text="{Binding WinHeight, Mode=TwoWay}" />
				<Button Content="Set" Margin="10,50,10,0" VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.Column="0"
				        Command="{Binding SetSizeCommand}" />
			</Grid>

			<Grid Margin="0,5">
				<CheckBox Content="Topmost" Margin="10,0" VerticalAlignment="Top"
				          IsChecked="{Binding Topmost, Mode=TwoWay}">
					<ie:Interaction.Triggers>
						<ie:EventTrigger EventName="Checked">
							<ie:InvokeCommandAction Command="{Binding TopMostCheckCommand}" />
						</ie:EventTrigger>
						<ie:EventTrigger EventName="Unchecked">
							<ie:InvokeCommandAction Command="{Binding TopMostCheckCommand}" />
						</ie:EventTrigger>
					</ie:Interaction.Triggers>
				</CheckBox>
			</Grid>

			<StackPanel Orientation="Vertical">
				<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
			</StackPanel>
			<TextBox Text="{Binding ProfileName}" Margin="10,10,10,0"/>
			<Button Content="Save As Profile" Margin="10,10,10,0"
			        Command="{Binding CreateProfile}"/>
		</StackPanel>

		<StackPanel Style="{StaticResource DisableWhenSelectionNull}" Grid.Column="2" Margin="10,0,10,10">
			<Label Content="Quick Actions" VerticalAlignment="Top" Margin="10,0" />
			<StackPanel Orientation="Vertical">
				<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
			</StackPanel>
			<Button Content="Move Top Left" Margin="10,5,10,0"
			        Command="{Binding TopLeftCommand}" />
			<Button Content="Remove Border" Margin="10,5,10,0"
			        Command="{Binding RemoveBorderCommand}" />
			<Button Content="Borderless Fullscreen" Margin="10,5,10,0"
			        Command="{Binding BorderlessFullscreenCommand}" />

			<!-- SAVED PROFILES -->
			<Label Content="Saved Profiles" VerticalAlignment="Top" Margin="10,0" />
			<StackPanel Orientation="Vertical">
				<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
			</StackPanel>

			<ListBox Name="ProfilesListBox" Margin="0,10,0,0"
			         ItemsSource="{Binding WindowProfiles}">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<Label Content="{Binding Name}" Width="120"></Label>
							<Button Content="X" Padding="6,0,6,0" HorizontalAlignment="Right"
							        Command="{Binding ElementName=Window, Path=DataContext.RemoveProfile}"
							        CommandParameter="{Binding}"></Button>
						</StackPanel>
					</DataTemplate>
				</ListBox.ItemTemplate>
				<ie:Interaction.Triggers>
					<ie:EventTrigger EventName="SelectionChanged">
						<ie:InvokeCommandAction Command="{Binding ElementName=Window, Path=ClearSelectedProfile}" />
						<ie:InvokeCommandAction Command="{Binding SelectProfile}"
						                        CommandParameter="{Binding ElementName=ProfilesListBox, Path=SelectedItem}" />
					</ie:EventTrigger>
				</ie:Interaction.Triggers>
			</ListBox>
		</StackPanel>

	</Grid>
</Window>